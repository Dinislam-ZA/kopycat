--- a/lib/decompress_raw.c	1970-01-01 03:00:00.000000000 +0300
+++ b/lib/decompress_raw.c	2024-02-28 21:18:54.629806335 +0300
@@ -0,0 +1,31 @@
+// I don't know but ok i've just copy-pasted this
+#ifdef STATIC
+#define PREBOOT
+/* Pre-boot environment: included */
+#endif /* STATIC */
+
+#include <linux/decompress/mm.h>
+
+#ifndef PREBOOT
+STATIC int INIT decompress_raw(unsigned char *buf, long len,
+		       long (*fill)(void*, unsigned long),
+		       long (*flush)(void*, unsigned long),
+		       unsigned char *out_buf,
+		       long *pos,
+		       void (*error)(char *x))
+{
+	asm volatile("cld ; rep movsb" :: "S"(buf), "D"(out_buf), "c"(len) : "flags", "memory");
+	return 0;
+}
+#else
+STATIC int INIT __decompress(unsigned char *buf, long len,
+			   long (*fill)(void*, unsigned long),
+			   long (*flush)(void*, unsigned long),
+			   unsigned char *out_buf, long out_len,
+			   long *pos,
+			   void (*error)(char *x))
+{
+	asm volatile("cld ; rep movsb" :: "S"(buf), "D"(out_buf), "c"(out_len) : "flags", "memory");
+	return 0;
+}
+#endif
--- a/arch/x86/boot/compressed/misc.c
+++ b/arch/x86/boot/compressed/misc.c
@@ -147,6 +147,10 @@
 #include "../../../../lib/decompress_unlz4.c"
 #endif
 
+#ifdef CONFIG_KERNEL_UNCOMPRESSED
+#include "../../../../lib/decompress_raw.c"
+#endif
+
 static void scroll(void)
 {
 	int i;
@@ -447,7 +447,7 @@
 		error("Wrong destination address");
 #endif
 
+	debug_putstr("\nDecompression has been skipped!!!... ");
-	debug_putstr("\nDecompressing Linux... ");
 	__decompress(input_data, input_len, NULL, NULL, output, output_len,
 			NULL, error);
 	parse_elf(output);
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -200,4 +200,10 @@

-endchoice
+
+config KERNEL_UNCOMPRESSED
+	bool "None"
+	help
+		Produce uncompressed kernel image. It is useful for debugging 
+		the kernel in KopyCat simulation
+endchoice

 config DEFAULT_HOSTNAME
--- a/arch/x86/boot/compressed/Makefile
+++ b/arch/x86/boot/compressed/Makefile
@@ -85,5 +85,10 @@
 $(obj)/vmlinux.bin.lz4: $(vmlinux.bin.all-y) FORCE
 	$(call if_changed,lz4)
+$(obj)/vmlinux.bin.raw: $(vmlinux.bin.all-y) FORCE
+	cat $(obj)/vmlinux.bin > $@
+	printf $$(printf '%08x' $$(wc -c < $@) | sed 's/\(..\)/\1 /g' | { read ch0 ch1 ch2 ch3; for ch in $$ch3 $$ch2 $$ch1 $$ch0; do printf '%s%03o' '\' $$((0x$$ch)); done }) >> $@
+# mkpiggy reads last 4 bytes as a size
+
 
 suffix-$(CONFIG_KERNEL_GZIP)	:= gz
 suffix-$(CONFIG_KERNEL_BZIP2)	:= bz2
@@ -91,4 +91,5 @@
 suffix-$(CONFIG_KERNEL_XZ)	:= xz
 suffix-$(CONFIG_KERNEL_LZO) 	:= lzo
 suffix-$(CONFIG_KERNEL_LZ4) 	:= lz4
+suffix-$(CONFIG_KERNEL_UNCOMPRESSED)	:= raw

--- a/arch/x86/tools/Makefile
+++ b/arch/x86/tools/Makefile
@@ -21,7 +21,6 @@
 quiet_cmd_sanitytest = TEST    $@
       cmd_sanitytest = $(obj)/insn_sanity $(posttest_64bit) -m 1000000
 
-posttest: $(obj)/test_get_len vmlinux $(obj)/insn_sanity
-	$(call cmd,posttest)
-	$(call cmd,sanitytest)
+posttest:
+	echo "[!!] posttest skip"
 
