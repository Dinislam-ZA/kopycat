plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.61"
    id 'org.gradle.java-gradle-plugin'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin")
    implementation group: 'org.jetbrains.dokka', name: 'dokka-gradle-plugin', version: '0.10.0'
    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '+'
    implementation("com.github.inforion:kotlin-extensions:v0.2.2")
    implementation("com.auth0:java-jwt:3.8.0")
    implementation('com.github.oshi:oshi-core:3.13.0')
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2")
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'


    testImplementation("junit:junit:4.12")
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.1.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.1.0')
}

gradlePlugin {
    plugins {
        create("gradle-build-config-plugin") {
            id = "ru.inforion.lab403.gradle.buildConfig"
            implementationClass = "ru.inforion.lab403.gradle.buildConfig.BuildConfigPlugin"
        }

        create("gradle-version-config-plugin") {
            id = "ru.inforion.lab403.gradle.versionConfig"
            implementationClass = "ru.inforion.lab403.gradle.versionConfig.VersionConfigPlugin"
        }

        create("gradle-dokka-mutltilang-plugin") {
            id = "ru.inforion.lab403.gradle.dokkaMultilang"
            implementationClass = "ru.inforion.lab403.gradle.dokkaMultilang.DokkaMultilangPlugin"
        }

        create("gradle-kopycat-plugin") {
            id = "ru.inforion.lab403.gradle.kopycat"
            implementationClass = "ru.inforion.lab403.gradle.kopycat.KopycatPlugin"
        }


    }
}



compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += ['-Xuse-experimental=kotlin.contracts.ExperimentalContracts']
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += ['-Xuse-experimental=kotlin.contracts.ExperimentalContracts']
    }
}